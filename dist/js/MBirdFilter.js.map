{"version":3,"names":[],"mappings":"","sources":["MBirdFilter.js"],"sourcesContent":["class MBirdFilter {\r\n\tconstructor() {\r\n\t\tthis.filterFormData = jQuery('#mbird-filter-form').serialize();\r\n\t\tthis.currentPage = 1;\r\n\t\tthis.postsPerPage = 9; // Set this to match the posts_per_page value in the shortcode\r\n\t\tthis.totalPosts = 0;\r\n\t\tthis._init();\r\n\t}\r\n\r\n\t_init() {\r\n\t\t// prevent form submission\r\n\t\tjQuery('#mbird-filter-form').on('submit', (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t});\r\n\r\n\t\t// on form change run the filters\r\n\t\tjQuery('#mbird-filter-form').on('change', (event) => {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tthis._runFilters();\r\n\t\t});\r\n\r\n\t\t// Check for URL parameters and set filter options if present\r\n\t\tconst urlParams = new URLSearchParams(window.location.search);\r\n\t\tif (urlParams.toString()) {\r\n\t\t\tthis._setFiltersFromUrl();\r\n\t\t} else {\r\n\t\t\t// Load initial data if no URL parameters are present\r\n\t\t\tthis._loadData();\r\n\t\t}\r\n\r\n\t\t// Add event listener for Load More button\r\n\t\tjQuery('#mbird-load-more').on('click', (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tthis.currentPage++;\r\n\t\t\tthis._loadData();\r\n\t\t});\r\n\r\n\t\t// add event listener for reset button\r\n\t\tjQuery('#mbird-filter-reset').on('click', (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tthis._resetFilters();\r\n\t\t});\r\n\t}\r\n\r\n\t_setFiltersFromUrl() {\r\n\t\tconst urlParams = new URLSearchParams(window.location.search);\r\n\r\n\t\turlParams.forEach((value, key) => {\r\n\t\t\tconst filterElement = jQuery(`#filter-${key}-${value}`);\r\n\t\t\tif (filterElement.length) {\r\n\t\t\t\tfilterElement.prop('checked', true);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Apply filters based on URL parameters\r\n\t\tthis._runFilters();\r\n\t}\r\n\r\n\t_loadData() {\r\n\t\tjQuery(\"#mbird-filter-loader\").show();\r\n\r\n\t\tconst shortcodeAtts = jQuery('input[name=\"shortcode_atts\"]').val();\r\n\r\n\t\tjQuery.ajax({\r\n\t\t\turl: mbirdFilters.ajaxurl, // use localized ajaxurl\r\n\t\t\ttype: 'POST',\r\n\t\t\tdata: {\r\n\t\t\t\taction: 'mbird_load',\r\n\t\t\t\tsecurity: jQuery('#mbird_filter_nonce_field').val(),\r\n\t\t\t\tshortcode_atts: shortcodeAtts,\r\n\t\t\t\tpage: this.currentPage // Include current page in the request\r\n\t\t\t},\r\n\t\t\tsuccess: (response) => {\r\n\t\t\t\t// if there are posts to display, append them to the list\r\n\t\t\t\tif(response.content) {\r\n\t\t\t\t\tjQuery('#mbird-filter-results').append(response.content);\r\n\r\n\t\t\t\t\t// Update total number of posts\r\n\t\t\t\t\tthis.totalPosts = response.total;\r\n\t\t\t\t\tconst totalPostsElement = jQuery('#total-posts');\r\n\t\t\t\t\ttotalPostsElement.text(`${response.total}`);\r\n\r\n\t\t\t\t\t// Check if there are more posts to load\r\n\t\t\t\t\tconst loadedPosts = jQuery('#mbird-filter-results .post-item').length;\r\n\t\t\t\t\tif (loadedPosts < this.totalPosts) {\r\n\t\t\t\t\t\tjQuery('#mbird-load-more').show();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tjQuery('#mbird-load-more').hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if no more posts, remove the button and show no more posts text\r\n\t\t\t\t\tjQuery('#mbird-load-more').hide();\r\n\t\t\t\t\tjQuery('#mbird-filter-results').html('<p class=\"no-results\">No posts found.</p>');\r\n\r\n\t\t\t\t\t// Update total number of posts to 0\r\n\t\t\t\t\tconst totalPostsElement = jQuery('#total-posts');\r\n\t\t\t\t\ttotalPostsElement.text('0');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror: function(xhr, status, error) {\r\n\t\t\t\tconsole.error('AJAX error:', status, error);\r\n\t\t\t},\r\n\t\t\tcomplete: () => {\r\n\t\t\t\tjQuery('#mbird-filter-loader').hide();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t_runFilters() {\r\n\t\tconst filterData = jQuery('#mbird-filter-form').serializeArray();\r\n\t\tlet shortcodeAtts = JSON.parse(jQuery('input[name=\"shortcode_atts\"]').val());\r\n\r\n\t\t// Reset terms in tax_query\r\n\t\tObject.keys(shortcodeAtts.tax_query).forEach(key => {\r\n\t\t\tif (Array.isArray(shortcodeAtts.tax_query[key].terms)) {\r\n\t\t\t\tshortcodeAtts.tax_query[key].terms = [];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst urlParams = new URLSearchParams(window.location.search);\r\n\t\tconst taxonomyParams = {};\r\n\t\tconst selectedFilters = [];\r\n\r\n\t\t// Clear existing filter parameters from URL\r\n\t\tObject.keys(shortcodeAtts.tax_query).forEach(key => {\r\n\t\t\tconst taxonomy = shortcodeAtts.tax_query[key].taxonomy;\r\n\t\t\turlParams.delete(taxonomy);\r\n\t\t});\r\n\r\n\t\tfilterData.forEach(item => {\r\n\t\t\tif (item.name.startsWith('filter-')) {\r\n\t\t\t\tconst key = item.name.replace('filter-', '');\r\n\t\t\t\tObject.keys(shortcodeAtts.tax_query).forEach(taxKey => {\r\n\t\t\t\t\tif (shortcodeAtts.tax_query[taxKey].taxonomy === key) {\r\n\t\t\t\t\t\tshortcodeAtts.tax_query[taxKey].terms.push(item.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (!taxonomyParams[key]) {\r\n\t\t\t\t\ttaxonomyParams[key] = [];\r\n\t\t\t\t}\r\n\t\t\t\ttaxonomyParams[key].push(item.value);\r\n\r\n\t\t\t\t// Add selected filter to the list\r\n\t\t\t\tconst label = '<span class=\"item\" data-filter=\"filter-'+`${key}-${item.value}`+'\">'+jQuery(`label[for=\"filter-${key}-${item.value}\"]`).text()+'<small>x</small></span>';\r\n\r\n\t\t\t\tselectedFilters.push(`${label}`);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Update the URL with the new parameters\r\n\t\tObject.keys(taxonomyParams).forEach(key => {\r\n\t\t\turlParams.set(key, taxonomyParams[key].join(','));\r\n\t\t});\r\n\t\tconst newUrl = decodeURIComponent(`${window.location.pathname}${urlParams.toString() ? '?' + urlParams.toString() : ''}`);\r\n\t\thistory.pushState(null, '', newUrl);\r\n\r\n\t\t// update shortcode_atts with the new filters\r\n\t\tjQuery('input[name=\"shortcode_atts\"]').val(JSON.stringify(shortcodeAtts));\r\n\r\n\t\t // Preserve the #no-remove element and update the selected filters\r\n\t\tconst noRemoveElement = jQuery('#no-remove').detach();\r\n\t\tjQuery('#selected-filters').html(selectedFilters);\r\n\t\tjQuery('#selected-filters').append(noRemoveElement);\r\n\r\n\t\t// Add event listener to remove selected filters\r\n\t\tjQuery('#selected-filters .item small').on('click', (event) => {\r\n\t\t\tconst filter = jQuery(event.target).closest('.item').data('filter');\r\n\t\t\tjQuery(`#${filter}`).prop('checked', false);\r\n\t\t\tthis._runFilters();\r\n\t\t});\r\n\r\n\t\tthis.currentPage = 1; // Reset to the first page\r\n\t\tjQuery('#mbird-filter-results').empty(); // Clear previous results\r\n\t\tthis._loadData();\r\n\t}\r\n\r\n\t_resetFilters() {\r\n\t\tlet shortcodeAtts = JSON.parse(jQuery('input[name=\"shortcode_atts\"]').val());\r\n\r\n\t\t// Clear only the terms in tax_query\r\n\t\tObject.keys(shortcodeAtts.tax_query).forEach(key => {\r\n\t\t\tif (Array.isArray(shortcodeAtts.tax_query[key].terms)) {\r\n\t\t\t\tshortcodeAtts.tax_query[key].terms = [];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Update the URL to remove filter parameters\r\n\t\tconst urlParams = new URLSearchParams(window.location.search);\r\n\t\tObject.keys(shortcodeAtts.tax_query).forEach(key => {\r\n\t\t\tconst taxonomy = shortcodeAtts.tax_query[key].taxonomy;\r\n\t\t\turlParams.delete(taxonomy);\r\n\t\t});\r\n\t\tconst newUrl = `${window.location.pathname}${urlParams.toString() ? '?' + urlParams.toString() : ''}`;\r\n\t\thistory.pushState(null, '', newUrl);\r\n\r\n\t\tjQuery('input[name=\"shortcode_atts\"]').val(JSON.stringify(shortcodeAtts));\r\n\t\tjQuery('#mbird-filter-form')[0].reset();\r\n\t\tthis.currentPage = 1;\r\n\t\tjQuery('#mbird-filter-results').empty();\r\n\r\n\t\t// Preserve the #no-remove element and clear selected filters\r\n\t\tconst noRemoveElement = jQuery('#no-remove').detach();\r\n\t\tjQuery('#selected-filters').empty();\r\n\t\tjQuery('#selected-filters').prepend(noRemoveElement);\r\n\r\n\t\tthis._loadData();\r\n\t}\r\n}"],"file":"MBirdFilter.js"}